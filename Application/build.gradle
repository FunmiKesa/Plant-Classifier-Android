
apply plugin: 'com.android.application'

repositories {
    jcenter()
    google()
}

dependencies {
    compile fileTree(include: ['*.jar', '*.so'], dir: 'libs')
    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.android.support:support-v13:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'
    compile 'com.android.support:appcompat-v7:27.0.2'
    implementation project(':opencv')
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 27

    buildToolsVersion "27.0.2"

    defaultConfig {
        applicationId "teamfuture.plantclassifier"
        minSdkVersion 21
        targetSdkVersion 27
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -std=c++11"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
//            abiFilters 'x86, armeabi-v7a'
            abiFilters = []
            abiFilters.addAll(ABI_FILTERS.split(';').collect{it as String})
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
